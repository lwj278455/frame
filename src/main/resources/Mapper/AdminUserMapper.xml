<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.frame.Dao.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.xxx.frame.Entity.AdminUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="adminLevel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="qrCodeUrl" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, username, password, adminLevel, qrCodeUrl
  </sql>
  <select id="selectByExample" parameterType="com.xxx.frame.Entity.AdminUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adminUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adminUser
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adminUser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxx.frame.Entity.AdminUserExample">
    delete from adminUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxx.frame.Entity.AdminUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into adminUser (id, name, username, 
      password, adminLevel, qrCodeUrl
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{adminlevel,jdbcType=VARCHAR}, #{qrcodeurl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxx.frame.Entity.AdminUser">
    insert into adminUser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="adminlevel != null">
        adminLevel,
      </if>
      <if test="qrcodeurl != null">
        qrCodeUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="adminlevel != null">
        #{adminlevel,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeurl != null">
        #{qrcodeurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxx.frame.Entity.AdminUserExample" resultType="java.lang.Long">
    select count(*) from adminUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adminUser
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.adminlevel != null">
        adminLevel = #{record.adminlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcodeurl != null">
        qrCodeUrl = #{record.qrcodeurl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adminUser
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      adminLevel = #{record.adminlevel,jdbcType=VARCHAR},
      qrCodeUrl = #{record.qrcodeurl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxx.frame.Entity.AdminUser">
    update adminUser
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="adminlevel != null">
        adminLevel = #{adminlevel,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeurl != null">
        qrCodeUrl = #{qrcodeurl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxx.frame.Entity.AdminUser">
    update adminUser
    set name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      adminLevel = #{adminlevel,jdbcType=VARCHAR},
      qrCodeUrl = #{qrcodeurl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectAdminUserInfo" resultMap="AdminUserInfoResultMap" parameterType="java.lang.Integer">
    select a.id as aid,ui.* from adminUser as a LEFT JOIN adminDesc as d on a.id=d.adminUserId LEFT JOIN userInfo as ui on ui.id=d.userId
    <where>
        <if test="1==1">
          a.id!=1
        </if>
        <if test="id!=null">
          and a.id = #{id}
        </if>
    </where>
  </select>

<resultMap id="AdminUserInfoResultMap" type="com.xxx.frame.Entity.AdminUser">
  <constructor>
    <idArg column="aid" javaType="java.lang.Integer" jdbcType="INTEGER" />
  </constructor>
  <collection property="userInfoList" resultMap="UserInfoResult"></collection>
</resultMap>

  <resultMap id="UserInfoResult" type="com.xxx.frame.Entity.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="headimgurl" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="realName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="city" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="country" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="province" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unionid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="privilege" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.frame.Dao.OnLineOrderMapper">
  <resultMap id="BaseResultMap" type="com.xxx.frame.Entity.OnLineOrder">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="orderNo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="classId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payMent" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="creatTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="payTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="closeTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderNo, classId, userId, payMent, status, creatTime, payTime, closeTime
  </sql>
  <select id="selectByExample" parameterType="com.xxx.frame.Entity.OnLineOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from onLineOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from onLineOrder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from onLineOrder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxx.frame.Entity.OnLineOrderExample">
    delete from onLineOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxx.frame.Entity.OnLineOrder" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into onLineOrder (id, orderNo, classId, 
      userId, payMent, status, 
      creatTime, payTime, closeTime
      )
    values (#{id,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}, 
      #{userid,jdbcType=VARCHAR}, #{payment,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{creattime,jdbcType=TIMESTAMP}, #{paytime,jdbcType=TIMESTAMP}, #{closetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxx.frame.Entity.OnLineOrder">
    insert into onLineOrder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderno != null">
        orderNo,
      </if>
      <if test="classid != null">
        classId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="payment != null">
        payMent,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creattime != null">
        creatTime,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="closetime != null">
        closeTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderno != null">
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="closetime != null">
        #{closetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxx.frame.Entity.OnLineOrderExample" resultType="java.lang.Long">
    select count(*) from onLineOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update onLineOrder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderno != null">
        orderNo = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        classId = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null">
        payMent = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null">
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paytime != null">
        payTime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closetime != null">
        closeTime = #{record.closetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update onLineOrder
    set id = #{record.id,jdbcType=INTEGER},
      orderNo = #{record.orderno,jdbcType=VARCHAR},
      classId = #{record.classid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=VARCHAR},
      payMent = #{record.payment,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      payTime = #{record.paytime,jdbcType=TIMESTAMP},
      closeTime = #{record.closetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxx.frame.Entity.OnLineOrder">
    update onLineOrder
    <set>
      <if test="orderno != null">
        orderNo = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        classId = #{classid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payMent = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creattime != null">
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="closetime != null">
        closeTime = #{closetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxx.frame.Entity.OnLineOrder">
    update onLineOrder
    set orderNo = #{orderno,jdbcType=VARCHAR},
      classId = #{classid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=VARCHAR},
      payMent = #{payment,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      closeTime = #{closetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>